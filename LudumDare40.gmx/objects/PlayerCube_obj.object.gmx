<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>PlayerCube_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

global.goldCount = 0;

global.playerweight = 1;

grav = 0.15;

hsp = 0;

vsp = 0;

jumpspeed = 4.5;

movespeed = 3.5;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keyRight = keyboard_check(ord("D"));

keyLeft = -keyboard_check(ord("Q"));

keyUp = keyboard_check(ord("Z"));


if keyboard_check(ord("D"))
{
    image_xscale = 1;
}

if keyboard_check(ord("Q"))
{
    image_xscale = - 1; 
}


if (PlayerCube_obj.x &lt; 0)
{
    PlayerCube_obj.x = 570;
}

if (PlayerCube_obj.x &gt; 600)
{
    PlayerCube_obj.x = 30;
}

// Reaction

move = keyRight + keyLeft;
hsp = move * movespeed;

if (vsp &lt; 10 )
{
    vsp += grav;
}

if (place_meeting(x , y + 1, StonePlatform_obj))
{
    vsp = keyUp * -jumpspeed * global.playerweight ;    
}

//Horizontal collision
if (place_meeting(x + hsp, y, StonePlatform_obj))
{
    while(!place_meeting(x + sign(hsp), y, StonePlatform_obj))
    {
        x += sign(hsp);
    }
    
    hsp = 0;
}
x += hsp;

//Vertical collision
if (place_meeting(x, y + vsp, StonePlatform_obj))
{
    while(!place_meeting(x , y + sign(vsp) ,StonePlatform_obj))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;

//diagonal collision
if(place_meeting(x+hsp, y+vsp, StonePlatform_obj))
{
    while(!place_meeting(x+sign(hsp), y + sign(vsp), StonePlatform_obj))
    {
        x+= sign(hsp);
        y+= sign(vsp);
    }
    hsp = 0;
    vsp = 0;
}

x += hsp;
y += vsp;


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
